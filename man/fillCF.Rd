% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fillCF.R
\name{fillCF}
\alias{fillCF}
\title{Fill CF specification template for stockEff}
\usage{
fillCF(
  species_itis = NULL,
  stock_abbrev = NULL,
  assessment_abbrev = NULL,
  assessment_year = NULL,
  data_years = NULL,
  sex_type = "NONE",
  tab_blocks = list(autofillLW = FALSE, mkt_missing = "keep", check_missing = FALSE),
  tab_prorate = NULL,
  tab_regions = NULL,
  tab_lw = NULL,
  tab_sex = NULL,
  outfile = NULL
)
}
\arguments{
\item{species_itis}{6 digit ITIS identifying the species for which data should be pulled, no default.}

\item{stock_abbrev}{A string describing the stock abbreviation assigned by stock efficiency (this shows up in the web address for STOCKEFF products), no default.}

\item{assessment_abbrev}{A string describing the assessment abbreviation, no default. Common options include "MT", "RT", "OA"}

\item{assessment_year}{The year in which the assessment will be reviewed, no default.}

\item{data_years}{The range of years for which catch data should be formatted for stockEff CF excel template, no default.}

\item{sex_type}{A string describing the sex type for which data should be pulled (this shows up in the web address for STOCKEFF products), default = "NONE". Common options include "NONE", "MALE", "FEMALE", "UNSEXED"}

\item{tab_blocks}{A list providing the following information to populate the BLOCKS tab: (NOTE: LW_ID is populated by identifying the LW whose associated start and end months completely overlap with the block, otherwise an NA is returned)
\itemize{
  \item{nespp4 - A named vector of market categories to include in block tab, where names correspond to the nespp4 codes. No default. Market categories included in the stock definition but excluded here are by default prorated (see tab_prorate for specifics)}
  \item{dropMarketYr - A table containing the nespp4 market category ("NESPP4" column) to "roll up" (i.e. drop) in the corrsponding year column("YEAR"), if provided landings are redistributed to other categories for that year/region (see "roll up" in Adding and Updating Stocks in StockEff documentation)}
  \item{block_opt - A string for the following options to specify blocks for each market category and year: 
          if = NULL (default), one block for every L-W relationship in tab_lw, 
          if = "MONTH", one block for each month (useful for checking minimum number of lengths exceeded for larger blocks), 
          if = "QUARTER", one block for each quarter,
          if = "SEMESTER", one block for each semester,
          if = "ANNUAL", one block per year for each market category
          if = "checkLENGTHS", Assumes monthly blocks were submitted to stockEff, checks the number of monthly length samples from biosamp_summary.csv to determine smallest block supported by data for each market category and year. Must also provide minLenSample argument if this option is used.}
  \item{minLenSample - A number specifying the minimum number of length sampels required to support a given block for a year and market category, only required if tab_blocks$block_opt == "checkLENGTHS"}
  \item{autofillLW - A boolean, if TRUE fills LW_ID based on complete overlap with LW months and years, if FALSE leaves NAs for blocks without a perfect match to LW month and year definition, default = FALSE}
  \item{mkt_missing - A string to govern years where 1+ market categories not length sampled, default = "keep":
           if = "drop" then these years dropped and NAA is not estimated
           if = "keep" then return NAs for BLOCK_TYPE in these years}
  \item{check_missing - A boolean, if TRUE check for missing market categories in data_years, also check if is.na(mkt_missing) == FALSE (i.e. if years with missing market categories will be dropped or further processed)}
}}

\item{tab_prorate}{A list providing the following information to populate the PRORATE tab:
\itemize{
  \item{turnOff - A vector of years for which unclassified landings should NOT be prorated, default prorates for all data_years.}
}}

\item{tab_regions}{A list providing the following information to populate the REGIONS tab: (NOTE: code is less well tested with >1 region)
\itemize{
  \item{stat_areas - A list of stat area vectors by region, no default. Example: list(c(510, 511), c(512, 513)) assumes 2 regions each containing 2 stat areas}
  \item{region_custom - A optional custom matrix containing "REGION_ID", "AREA", and "YEAR" columns, not required if stat_areas object provided}
}}

\item{tab_lw}{A matrix or data.frame containing the following named columns of information for each LW data source. Currently only supports blocks with types, start and end months that match LW_PARAMS and are consistent across all years
\itemize{
  \item{ALPHA - Alpha parameter for each LW relationship}
  \item{BETA - Beta parameter for each LW relationship}
  \item{SOURCE - Description of LW parameter and link to source document}
  \item{LW_TYPE - Type of LW relationship, options can include "SEMESTER", "ANNUAL", "CUSTOM"}
  \item{LW_ID - ID for each row of the table}
  \item{MONTH_START - First month that LW_ID row may be used, processed in tab_BLOCKS and ultimately dropped from tab_LW_PARAMS}
  \item{MONTH_END - Last month that LW_ID row may be used, processed in tab_BLOCKS and ultimately dropped from tab_LW_PARAMS}
  \item{YEAR_START - First year that LW_ID row may be used, processed in tab_BLOCKS and ultimately dropped from tab_LW_PARAMS}
  \item{YEAR_END - Last year that LW_ID row may be used, processed in tab_BLOCKS and ultimately dropped from tab_LW_PARAMS}
}}

\item{tab_sex}{A list providing the following information to populate the SEX_TYPE tab:
\itemize{
  \item{start_yr - The start year for CF data, default = first year in data_years.}
  \item{end_yr - The end year for CF data, default = last year in data_years.}
}}

\item{outfile}{A string for the final exported file name, does NOT need to include .xlsx extention. No default.

NOTE: tab_blocks$block_opt = checkLENGTHS will NOT work unless connected to the VPN
NOTE: ALK_HOLES, EXCLUSIONS, and LENGTH_IMPUTATIONS tabs are not populated by this function but placeholders are put in the resulting output file so that they can be filled externally as needed.
NOTE: If you receive the following error, then the .xlsx file by the provided name already exists and can't be overwritten: [ERROR] workbook_close(): Error creating 'outfile.xlsx'. System error = Permission denied Error: Error in libxlsxwriter: 'Error creating output xlsx file. Usually a permissions error.'
NOTE: If you find NAs in the REGION_ID for the BLOCKS tab, then there was a stat area in the stockeff_pre_prod.mv_cf_stock_data_length_o product that was not provided in the tab_regions$stat_areas argument.}
}
\value{
A list containing the following:
\itemize{
  \item{mkt_missing_yr - A table of market categories years for which 1+ market categories were not sampled where 1+ market categories were not sampled}
  \item{regions_missing - Table of AREAs that appear in oracle data but not in tab_regions$stat_area argument for this function (may be missing blocking)}
}
# BSB SOUTH example
# First grab LW info as processed for RT
load(here::here("Data_workflow/BSBtest_Length_Weight_Data.RDATA")) # Load LW example for South BSB stock
stock = "SOUTH"
lm.obj <- get(paste("lm",tolower(stock),"sem.yrbin", sep='.'))
lm.param.sem <- vector('list',length(lm.obj))
names(lm.param.sem) <- names(lm.obj)

for (sem in names(lm.param.sem))
{
  # sem <- names(lm.param.sem)[1]
  x <- lm.obj[[sem]]
  lm.mat <- data.frame(do.call(rbind, 
                               lapply(x, function(y) {
                                 c( y$coefficients["log(LENGTH)"],
                                    y$coefficients["(Intercept)"]
                                 )
                               } ))
  )
  colnames(lm.mat) <- c('Log.length','Intercept')
  lm.mat$YrBin <- rownames(lm.mat)
  rownames(lm.mat) <- NULL
  lm.mat$Semester <- sem  
  lm.param.sem[[sem]] <- lm.mat
}
lm.params <- do.call(rbind, lm.param.sem)
rownames(lm.params) <- NULL

### Create LW_Params table
lw.params <- tibble(lm.params) %>%
  mutate(
    ALPHA = exp(lm.params$Intercept), .before=1
  ) %>%
  select(-Intercept) %>%
  rename(BETA = Log.length) %>%
  unite("SOURCE", Semester:YrBin, remove=FALSE) %>%
  mutate(LW_TYPE = 'SEMESTER',
         LW_ID = 1:n(),
         .before = YrBin
  ) %>%
  mutate(YEAR_START = c(1989, 2002, 2012, 1989, 2002, 2012), # 1989 start years were calculated with data from 1992-2001 and used to fill 1989-1991 since no samples available for these early years
         YEAR_END = c(2001, 2011, 2021, 2001, 2011, 2021),
         MONTH_START = c(1,1,1,7,7,7),
         MONTH_END = c(6,6,6,12,12,12))

fillCF(species_itis = 167687,
 stock_abbrev = "SOUTH",
 assessment_abbrev = "RT",
 assessment_year = 2022,
 data_years = 1989:2021,
 sex_type = "NONE",
 tab_regions = list(stat_areas = list(c('614', '615', '621', '622', '623', '624', '625', '626', '627', '628', '629', '631', '632', '633', '634', '635', '636', '637', '638', '639', '640'))),
 tab_lw = data.frame(ALPHA = lw.params$ALPHA,
BETA = lw.params$BETA,
SOURCE = lw.params$SOURCE,
LW_TYPE = lw.params$LW_TYPE,
LW_ID = lw.params$LW_ID, 
MONTH_START = lw.params$MONTH_START,
MONTH_END = lw.params$MONTH_END,
YEAR_START = lw.params$YEAR_START,
YEAR_END = lw.params$YEAR_END),
 tab_blocks = list(nespp4 = c('3350', '3351', '3352', '3353', '3355'),
 block_opt = "SEMESTER",
 autofillLW = TRUE),
outfile =  here::here("test_SOUTH_BSB_CFfill"))

originalBLOCKS <- read.csv(here::here("Data_workflow", "BSBtest_CF_Specification.BLOCKS.167687.SOUTH.csv"))
originalBLOCKS$NESPP4 <- as.character(originalBLOCKS$NESPP4)
originalBLOCKS$REGION_ID <- as.character(originalBLOCKS$REGION_ID)
originalBLOCKS$LW_ID <- as.character(originalBLOCKS$LW_ID)
testBLOCKS <- read_excel(here::here("test_SOUTH_BSB_CFfill.xlsx"), sheet = "BLOCKS")
# testBLOCKS$REGION_ID[nrow(testBLOCKS)] <- "2" # If uncommented makes 1 row not match in testBLOCKS, shows up in tidylog below
left_join(testBLOCKS, originalBLOCKS, by = colnames(originalBLOCKS))
}
\description{
Fill CF specification template for stockEff
}
